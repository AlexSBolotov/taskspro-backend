{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.1",
    "title": "Tasckpro",
    "description": "Backend documentation for Tasckpro-project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:2000" },
    { "url": "https://taskspro-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization/User endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,

          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing field)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse400"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (requested resource could not be found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          },
          "409": {
            "description": "Conflict (user with stated email is already exist)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse409"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,

          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing field)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (login information is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (requested resource could not be found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          }
        }
      }
    },
    "/api/boards": {
      "post": {
        "tags": ["Boards"],
        "summary": "Add board",
        "parameters": [],

        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Board object",
          "required": true,

          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing required field)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (requested resource could not be found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          },
          "409": {
            "description": "Conflict (board already exist)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse409"
                }
              }
            }
          }
        }
      }
    },
    "/api/boards/{id}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get board's info by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Board`s id",
            "schema": {
              "type": "string"
            }
          }
        ],

        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid board`s id)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (requested resource could not be found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          },
          "409": {
            "description": "Conflict (board already exist)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse409"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Boards"],
        "summary": "Edit board's info by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Board`s id",
            "schema": {
              "type": "string"
            }
          }
        ],

        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Board object",
          "required": true,

          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid board`s id/ missing required field)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (requested resource could not be found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          },
          "409": {
            "description": "Conflict (board already exist)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse409"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Board`s id",
            "schema": {
              "type": "string"
            }
          }
        ],

        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid board`s id)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found (requested resource could not be found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response404"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Response401": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Unauthorized",
            "example": "Not authorized"
          }
        },
        "example": {
          "message": "Not authorized"
        }
      },
      "Response404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The requested resource could not be found",
            "example": "Not Found"
          }
        },
        "example": {
          "message": "Not Found"
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User101"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "User101@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Accsess token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZjMWY3ZDg3NmQ3NWY1MTQzYThhMCIsImlhdCI6MTY5MTA2NTQwMCwiZXhwIjoxNjkxMTUxODAwfQ.-09Gio58q4KYVeElnDbStvayWiMUZlOS2HcW3QPqgBY"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "User101"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "User101@mail.com"
              },
              "theme": {
                "type": "string",
                "description": "App theme",
                "example": "dark"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "https://monosnap.com/file/p3erqwEE6b2qI2rjCSPXIMQPxconYV"
              },
              "boards": {
                "type": "array",
                "description": "Empty array of user's boards",
                "example": []
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZjMWY3ZDg3NmQ3NWY1MTQzYThhMCIsImlhdCI6MTY5MTA2NTQwMCwiZXhwIjoxNjkxMTUxODAwfQ.-09Gio58q4KYVeElnDbStvayWiMUZlOS2HcW3QPqgBY",
          "user": {
            "name": "User101",
            "email": "User101@mail.com",
            "theme": "dark",
            "avatarURL": "",
            "boards": []
          }
        }
      },
      "RegistrationResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Bad request (missing required field)",
            "example": "Name is required"
          }
        },
        "example": {
          "message": "Name is required"
        }
      },
      "RegistrationResponse409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Conflict (user with stated email is already exist)",
            "example": "Email in use"
          }
        },
        "example": {
          "message": "Email in use"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "User101@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Accsess token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZjMWY3ZDg3NmQ3NWY1MTQzYThhMCIsImlhdCI6MTY5MTA2NTQwMCwiZXhwIjoxNjkxMTUxODAwfQ.-09Gio58q4KYVeElnDbStvayWiMUZlOS2HcW3QPqgBY"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "User101"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "User101@mail.com"
              },
              "theme": {
                "type": "string",
                "description": "App theme",
                "example": "dark"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "https://monosnap.com/file/p3erqwEE6b2qI2rjCSPXIMQPxconYV"
              },
              "boards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Board`s id",
                      "example": "64c772d4906c009cfba4f8a9"
                    },
                    "title": {
                      "type": "string",
                      "description": "Board`s title",
                      "example": "Board01"
                    },
                    "icon": {
                      "type": "string",
                      "description": "Board`s icon",
                      "example": "icon-star"
                    },
                    "background": {
                      "type": "string",
                      "description": "Board`s background",
                      "example": "10"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Board`s last update",
                      "example": "2023-08-03T11:32:36.216Z"
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZjMWY3ZDg3NmQ3NWY1MTQzYThhMCIsImlhdCI6MTY5MTA2NTQwMCwiZXhwIjoxNjkxMTUxODAwfQ.-09Gio58q4KYVeElnDbStvayWiMUZlOS2HcW3QPqgBY",
          "user": {
            "name": "User101",
            "email": "User101@mail.com",
            "theme": "dark",
            "avatarURL": "",
            "boards": [
              {
                "_id": "64c772d4906c009cfba4f8a9",
                "title": "Board01",
                "icon": "icon-star",
                "background": "10",
                "updatedAt": "2023-08-03T11:32:36.216Z"
              }
            ]
          }
        }
      },
      "LoginResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Bad request (missing required field)",
            "example": "You must enter an email"
          }
        },
        "example": {
          "message": "You must enter an email"
        }
      },
      "LoginResponse401": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Unauthorized ( login information is wrong)",
            "example": "Email or password is wrong"
          }
        },
        "example": {
          "message": "Email or password is wrong"
        }
      },
      "AddBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board01"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-project"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "00"
          }
        }
      },
      "AddBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board's id",
            "example": "64cc1ecaa11d08d1a3498322"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board01"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-star"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "00"
          },
          "updatedAt": {
            "type": "string",
            "description": "Board's last update date",
            "example": "2023-08-03T21:40:26.681Z"
          },
          "columns": {
            "type": "array",
            "description": "Empty array of board`s columns",
            "example": []
          }
        },
        "example": {
          "_id": "64c772d4906c009cfba4f8a9",
          "title": "Board01",
          "icon": "icon-star",
          "background": "10",
          "updatedAt": "2023-08-03T11:32:36.216Z",
          "columns": []
        }
      },
      "AddBoardResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Bad request (missing required title field)",
            "example": "missing required title field"
          }
        },
        "example": {
          "message": "missing required title field"
        }
      },
      "AddBoardResponse409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Conflict (board with stated title is already exist)",
            "example": "Board Board01 already exist"
          }
        },
        "example": {
          "message": "Board Board01 already exist"
        }
      },
      "GetBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board's id",
            "example": "64cc1ecaa11d08d1a3498322"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board01"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-project"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "00"
          },
          "updatedAt": {
            "type": "string",
            "description": "Board's last update date",
            "example": "2023-08-03T21:40:26.681Z"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Column's`s id",
                  "example": "64c772d4906c009cfba4f8a9"
                },
                "title": {
                  "type": "string",
                  "description": "Column`s title",
                  "example": "Column01"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Column`s last update",
                  "example": "2023-08-03T11:32:36.216Z"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Task's`s id",
                        "example": "64c772d4906c009cfba4f8a9"
                      },
                      "title": {
                        "type": "string",
                        "description": "Task`s title",
                        "example": "Task01"
                      },
                      "description": {
                        "type": "string",
                        "description": "Task`s description",
                        "example": "Task01 description"
                      },
                      "priority": {
                        "type": "string",
                        "description": "Task`s priority",
                        "example": "Low"
                      },
                      "deadline": {
                        "type": "string",
                        "description": "Task`s deadline",
                        "example": "2023-07-31T13:32:01.041Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "Task`s last update",
                        "example": "2023-08-03T11:32:36.216Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "_id": "64c772d4906c009cfba4f8a9",
          "title": "Board01",
          "icon": "icon-star",
          "background": "10",
          "updatedAt": "2023-08-03T11:32:36.216Z",
          "columns": [
            {
              "_id": "64c7a72cef9d0ebaa3b7b7b9",
              "title": "Column01",
              "updatedAt": "2023-08-01T10:39:02.011Z",
              "tasks": [
                {
                  "_id": "64c7b7d17e966dce4df1fc6c",
                  "title": "Task01",
                  "description": "Task01 description",
                  "priority": "Low",
                  "deadline": "2023-07-31T13:32:01.041Z",
                  "updatedAt": "2023-07-31T13:32:01.042Z"
                }
              ]
            }
          ]
        }
      },
      "GetBoardResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Bad request (invalid board`s id)",
            "example": "64c772d4906c009fba4f8a9 is not valid id"
          }
        },
        "example": {
          "message": "64c772d4906c009fba4f8a9 is not valid id"
        }
      },
      "EditBoardRequest": {
        "type": "object",
        "required": ["title", "icon", "background"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board01"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-project"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "00"
          }
        }
      },
      "EditBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board's id",
            "example": "64cc1ecaa11d08d1a3498322"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board01"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-project"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "00"
          },
          "updatedAt": {
            "type": "string",
            "description": "Board's last update date",
            "example": "2023-08-03T21:40:26.681Z"
          }
        }
      },
      "DeleteBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board's id",
            "example": "64cc1ecaa11d08d1a3498322"
          },
          "message": {
            "type": "string",
            "description": "Successful operation's message",
            "example": "Board deleted"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
